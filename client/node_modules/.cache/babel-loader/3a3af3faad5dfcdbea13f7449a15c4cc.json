{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, productDetailsReducer, newProductReducer, productReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducer';\nimport { allUsersReducer, authReducer, forgotPasswordReducer, userDetailsReducer, userReducer } from './reducers/userReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  productReviews: productReviewsReducer,\n  newReview: newReviewReducer,\n  review: reviewReducer,\n  auth: authReducer,\n  user: userReducer,\n  userDetails: userDetailsReducer,\n  allUsers: allUsersReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  orderDetails: orderDetailsReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : []\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","productDetailsReducer","newProductReducer","productReducer","newReviewReducer","productReviewsReducer","reviewReducer","allUsersReducer","authReducer","forgotPasswordReducer","userDetailsReducer","userReducer","cartReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrdersReducer","orderReducer","reducer","products","productDetails","newProduct","product","productReviews","newReview","review","auth","user","userDetails","allUsers","forgotPassword","cart","newOrder","myOrders","allOrders","order","orderDetails","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,eAAT,EAA0BC,qBAA1B,EAAiDC,iBAAjD,EAAoEC,cAApE,EAAoFC,gBAApF,EAAsGC,qBAAtG,EAA6HC,aAA7H,QAAmJ,2BAAnJ;AAEA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,qBAAvC,EAA8DC,kBAA9D,EAAkFC,WAAlF,QAAoG,wBAApG;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,mBAA3C,EAAgEC,gBAAhE,EAAkFC,YAAlF,QAAuG,yBAAvG;AAEA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;AAC9BuB,EAAAA,QAAQ,EAAEnB,eADoB;AAE9BoB,EAAAA,cAAc,EAAEnB,qBAFc;AAG9BoB,EAAAA,UAAU,EAAEnB,iBAHkB;AAI9BoB,EAAAA,OAAO,EAAEnB,cAJqB;AAK9BoB,EAAAA,cAAc,EAAElB,qBALc;AAM9BmB,EAAAA,SAAS,EAAEpB,gBANmB;AAO9BqB,EAAAA,MAAM,EAAEnB,aAPsB;AAQ9BoB,EAAAA,IAAI,EAAElB,WARwB;AAS9BmB,EAAAA,IAAI,EAAEhB,WATwB;AAU9BiB,EAAAA,WAAW,EAAElB,kBAViB;AAW9BmB,EAAAA,QAAQ,EAAEtB,eAXoB;AAY9BuB,EAAAA,cAAc,EAAErB,qBAZc;AAa9BsB,EAAAA,IAAI,EAAEnB,WAbwB;AAc9BoB,EAAAA,QAAQ,EAAEnB,eAdoB;AAe9BoB,EAAAA,QAAQ,EAAEnB,eAfoB;AAgB9BoB,EAAAA,SAAS,EAAElB,gBAhBmB;AAiB9BmB,EAAAA,KAAK,EAAElB,YAjBuB;AAkB9BmB,EAAAA,YAAY,EAAErB;AAlBgB,CAAD,CAA/B;AAqBA,IAAIsB,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAE;AACJO,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GACuC,EAF9C;AAGJG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACZC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADY,GACuC;AAJjD;AADW,CAAnB;AASA,MAAMI,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AACA,MAAM+C,KAAK,GAAGlD,WAAW,CACvBuB,OADuB,EAEvBmB,YAFuB,EAGvBtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productsReducer, productDetailsReducer, newProductReducer, productReducer, newReviewReducer, productReviewsReducer, reviewReducer }  from './reducers/productReducer'\n\nimport { allUsersReducer, authReducer, forgotPasswordReducer, userDetailsReducer, userReducer} from './reducers/userReducer'\n\nimport { cartReducer } from './reducers/cartReducer'\n\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer  } from './reducers/orderReducer'\n\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  productReviews: productReviewsReducer,\n  newReview: newReviewReducer,\n  review: reviewReducer,\n  auth: authReducer,\n  user: userReducer,\n  userDetails: userDetailsReducer,\n  allUsers: allUsersReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  orderDetails: orderDetailsReducer\n});\n\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo')\n    ? JSON.parse(localStorage.getItem('shippingInfo')) : []\n  }\n}\n\nconst middleware = [thunk];\nconst store = createStore(\n  reducer, \n  initialState, \n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store"]},"metadata":{},"sourceType":"module"}