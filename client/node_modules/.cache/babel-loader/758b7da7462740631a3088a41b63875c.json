{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAIL, ALL_USERS_REQUEST, ALL_USERS_SUCCESS, ALL_USERS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL, DELETE_USER_REQUEST, DELETE_USER_SUCCESS, DELETE_USER_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, CLEAR_ERRORS } from '../constants/userConstants'; // Login User\n\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Register User\n\nexport const registerUser = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/register', userData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data.user\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/me');\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Update profile\n\nexport const updateProfile = userData => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/me/update', userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Update password\n\nexport const updatePassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/password/update', passwords, config);\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Forgot Password\n\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: FORGOT_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/password/forgot', email, config);\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: data.message\n    });\n  } catch (err) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Reset Password\n\nexport const resetPassword = (token, passwords) => async dispatch => {\n  try {\n    dispatch({\n      type: RESET_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config);\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Logout User\n\nexport const logoutUser = () => async dispatch => {\n  try {\n    await axios.get('/api/v1/logout');\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; //* Admin routes\n// All Users (ADMIN)\n\nexport const allUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_USERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/admin/users');\n    dispatch({\n      type: ALL_USERS_SUCCESS,\n      payload: data.users\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_USERS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // User Details (ADMIN)\n\nexport const getUserDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/user/${id}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Update profile\n\nexport const updateUser = (id, userData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/user/${id}`, userData, config);\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Delete user\n\nexport const deleteUser = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/user/${id}`);\n    dispatch({\n      type: DELETE_USER_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/actions/userActions.js"],"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loginUser","email","password","dispatch","type","config","headers","data","post","payload","user","err","response","errorMessage","registerUser","userData","loadUser","get","updateProfile","put","success","updatePassword","passwords","forgotPassword","message","resetPassword","token","logoutUser","allUsers","users","getUserDetails","id","updateUser","deleteUser","delete","clearErrors"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { \n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  UPDATE_PROFILE_REQUEST,\n  UPDATE_PROFILE_SUCCESS,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PASSWORD_REQUEST,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAIL,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAIL,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  ALL_USERS_REQUEST,\n  ALL_USERS_SUCCESS,\n  ALL_USERS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAIL,\n  DELETE_USER_REQUEST,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  CLEAR_ERRORS\n} from '../constants/userConstants'\n\n// Login User\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n   \n    dispatch({ type: LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post(\n      '/api/v1/login', {email, password}, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    })\n\n  } catch(err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Register User\nexport const registerUser = (userData) => async dispatch => {\n  try {\n   \n    dispatch({ type: REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }\n\n    const { data } = await axios.post(\n      '/api/v1/register', userData, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data.user\n    })\n\n  } catch(err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({ type: LOAD_USER_REQUEST });\n\n    const { data } = await axios.get('/api/v1/me');\n\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n\n  } catch(err) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Update profile\nexport const updateProfile = (userData) => async dispatch => {\n  try {\n   \n    dispatch({ type: UPDATE_PROFILE_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }\n\n    const { data } = await axios.put(\n      '/api/v1/me/update', userData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Update password\nexport const updatePassword = (passwords) => async dispatch => {\n  try {\n   \n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.put(\n      '/api/v1/password/update', passwords, config);\n\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Forgot Password\nexport const forgotPassword= (email) => async dispatch => {\n  try {\n   \n    dispatch({ type: FORGOT_PASSWORD_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post(\n      '/api/v1/password/forgot', email, config);\n\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: data.message\n    });\n\n  } catch(err) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Reset Password\nexport const resetPassword= (token, passwords) => async dispatch => {\n  try {\n   \n    dispatch({ type: RESET_PASSWORD_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/v1/password/reset/${token}`, passwords, config);\n\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Logout User\nexport const logoutUser = () => async dispatch => {\n  try {\n\n    await axios.get('/api/v1/logout');\n\n    dispatch({\n      type: LOGOUT_SUCCESS,\n    });\n\n  } catch(err) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n//* Admin routes\n\n// All Users (ADMIN)\nexport const allUsers = () => async dispatch => {\n  try {\n    dispatch({ type: ALL_USERS_REQUEST });\n\n    const { data } = await axios.get('/api/v1/admin/users');\n\n    dispatch({\n      type: ALL_USERS_SUCCESS,\n      payload: data.users\n    });\n\n  } catch(err) {\n    dispatch({\n      type: ALL_USERS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// User Details (ADMIN)\nexport const getUserDetails = (id) => async dispatch => {\n  try {\n    \n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/user/${id}`);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n\n  } catch(err) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Update profile\nexport const updateUser = (id, userData) => async dispatch => {\n  try {\n   \n    dispatch({ type: UPDATE_USER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/v1/admin/user/${id}`, userData, config);\n\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Delete user\nexport const deleteUser = (id) => async dispatch => {\n  try {\n   \n    dispatch({ type: DELETE_USER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/user/${id}`);\n\n    dispatch({\n      type: DELETE_USER_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Clear Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n}"]},"metadata":{},"sourceType":"module"}