{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satish\\\\Desktop\\\\web_design\\\\E-Shop\\\\Final Project\\\\INFO6150-20821-Web-Design-User-Experience_final_project\\\\final_project\\\\client\\\\src\\\\components\\\\user\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MetaData from '../layout/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetPassword, clearErrors } from '../../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useSelector(state => state.forgotPassword);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success('Password reset successfully');\n      history.push('/login');\n    }\n  }, [dispatch, alert, error, history, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('password', password);\n    formData.set('confirmPassword', confirmPassword);\n    dispatch(resetPassword(match.params.token, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Reset Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password_field\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password_field\",\n              className: \"form-control\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_password_field\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_password_field\",\n              className: \"form-control\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new_password_button\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ResetPassword, \"XabZMzwXcJiB0CKE9OJtFsyeGxQ=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/components/user/ResetPassword.js"],"names":["React","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","resetPassword","clearErrors","ResetPassword","history","match","password","setPassword","confirmPassword","setConfirmPassword","alert","dispatch","error","success","state","forgotPassword","push","submitHandler","e","preventDefault","formData","FormData","set","params","token","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport  MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetPassword, clearErrors } from '../../actions/userActions'\n\nconst ResetPassword = ({history, match}) => {\n\n  const [password, setPassword] = useState('')\n   const [confirmPassword, setConfirmPassword] = useState('')\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, success } = useSelector(\n    state => state.forgotPassword)\n\n  useEffect(() => {\n\n    if(error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if(success) {\n      alert.success('Password reset successfully');\n\n      history.push('/login');\n    }\n\n  }, [dispatch, alert, error, history, success])\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('password', password );\n    formData.set('confirmPassword', confirmPassword );\n\n    dispatch(resetPassword(match.params.token, formData));\n  }\n\n  return (\n    <>\n      <MetaData title={'Reset Password'} />\n\n      <div className=\"row wrapper\">\n        <div className=\"col-10 col-lg-5\">\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\n            <h1 className=\"mb-3\">New Password</h1>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password_field\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password_field\"\n                className=\"form-control\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"confirm_password_field\"\n                className=\"form-control\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </div>\n\n            <button\n              id=\"new_password_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\">\n              Set Password\n            </button>\n\n          </form>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ResetPassword\n"]},"metadata":{},"sourceType":"module"}