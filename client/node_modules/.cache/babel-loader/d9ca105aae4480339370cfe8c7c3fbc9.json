{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satish\\\\Desktop\\\\web_design\\\\E-Shop\\\\Final Project\\\\INFO6150-20821-Web-Design-User-Experience_final_project\\\\final_project\\\\client\\\\src\\\\components\\\\admin\\\\UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport { ImPencil, ImBin } from \"react-icons/im\"; //userlist\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UsersList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('User has been removed.');\n      history.push('/admin/users');\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isDeleted]);\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'User ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role.includes('admin') ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#fa9c23'\n          },\n          children: user.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#00aaff'\n          },\n          children: user.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"btn btn-warning text-white mr-1\",\n            children: /*#__PURE__*/_jsxDEV(ImPencil, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => deleteUserHandler(user._id),\n            children: /*#__PURE__*/_jsxDEV(ImBin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      });\n    });\n    return data;\n  };\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UsersList, \"Y04wUDJmFcgGjJIIVQw3/P3HcoI=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/components/admin/UsersList.js"],"names":["React","useEffect","Link","MDBDataTable","Loader","MetaData","Sidebar","useAlert","useDispatch","useSelector","allUsers","deleteUser","clearErrors","DELETE_USER_RESET","ImPencil","ImBin","UsersList","history","alert","dispatch","loading","error","users","state","isDeleted","user","success","push","type","setUsers","data","columns","label","field","sort","rows","forEach","id","_id","name","email","role","includes","color","actions","deleteUserHandler"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { allUsers, deleteUser, clearErrors} from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nimport { ImPencil, ImBin } from \"react-icons/im\"\n//userlist\nconst UsersList = ({ history }) => {\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, users } = useSelector( state => state.allUsers); const { isDeleted } = useSelector(state => state.user);\n\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n   if (isDeleted) {\n      alert.success('User has been removed.');\n      history.push('/admin/users');\n      dispatch({ type: DELETE_USER_RESET });\n    }\n\n  }, [dispatch, alert, error, history, isDeleted]);\n\n   const setUsers= () => {\n    const data = {\n      columns: [\n        {\n          label: 'User ID',\n          field: 'id',\n          sort: 'asc'\n        },\n        {\n          label: 'Name',\n          field: 'name',\n          sort: 'asc'\n        },\n        {\n          label: 'Email',\n          field: 'email',\n          sort: 'asc'\n        },\n        {\n          label: 'Role',\n          field: 'role',\n          sort: 'asc'\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: []\n    }\n\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role\n        .includes('admin') \n        ? <p style={{ color: '#fa9c23' }}>{user.role}</p> \n        : <p style={{ color: '#00aaff' }}>{user.role}</p>,\n        actions:\n        <>\n          <Link \n          to={`/admin/user/${user._id}`} \n          className=\"btn btn-warning text-white mr-1\" >\n            <ImPencil />\n          </Link>\n          <button className=\"btn btn-danger\" onClick={() => deleteUserHandler(user._id)}>\n            <ImBin />\n          </button>\n        </>\n      })\n    })\n\n    return data;\n  }\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  }\n  \n  return (\n    <>\n       <MetaData title={'All Users'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <>\n            <h1 className=\"my-5\">All users</h1>\n\n            {loading ? <Loader /> : (\n                 <MDBDataTable \n                  data={setUsers()}\n                  className=\"px-3\"\n                  bordered\n                  striped\n                  hover\n                />\n            )}\n          </>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}