{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satish\\\\Desktop\\\\web_design\\\\E-Shop\\\\Final Project\\\\INFO6150-20821-Web-Design-User-Experience_final_project\\\\final_project\\\\client\\\\src\\\\components\\\\order\\\\ListOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport Loader from '../layout/Loader';\nimport MetaData from '../layout/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myOrders, clearErrors } from '../../actions/orderActions';\nimport { ImEye } from \"react-icons/im\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListOrders = () => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [{\n        label: 'Order ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Num of Items',\n        field: 'numOfItems',\n        sort: 'asc'\n      }, {\n        label: 'Amount',\n        field: 'amount',\n        sort: 'asc'\n      }, {\n        label: 'Status',\n        field: 'status',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc'\n      }],\n      rows: []\n    };\n    orders.forEach(order => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `${order.totalPrice}`,\n        status: order.orderStatus && String(order.orderStatus).includes('Delivered') ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/order/${order._id}`,\n          className: \"btn btn-primary d-inline-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(ImEye, {\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), \" View Details\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'My Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-5\",\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      data: setOrders(),\n      className: \"px-3\",\n      bordered: true,\n      striped: true,\n      noBottomColumns: true,\n      sortable: true,\n      hover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListOrders, \"YmEfncUQxZ+qfHRSODBLlYTI4+Y=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ListOrders;\nexport default ListOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOrders\");","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/components/order/ListOrders.js"],"names":["React","useEffect","Link","MDBDataTable","Loader","MetaData","useAlert","useDispatch","useSelector","myOrders","clearErrors","ImEye","ListOrders","alert","dispatch","loading","error","orders","state","setOrders","data","columns","label","field","sort","rows","forEach","order","push","id","_id","numOfItems","orderItems","length","amount","totalPrice","status","orderStatus","String","includes","color","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,4BAAtC;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA6BT,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACT,QAAjB,CAA9C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACL,QAAQ,EAAT,CAAR;;AAEA,QAAIO,KAAJ,EAAW;AACTH,MAAAA,KAAK,CAACG,KAAN,CAAYA,KAAZ;AACAF,MAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACD;AACF,GAPQ,EAON,CAACI,QAAD,EAAWD,KAAX,EAAkBG,KAAlB,CAPM,CAAT;;AASA,QAAMG,SAAS,GAAE,MAAM;AACrB,UAAMC,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,UADT;AAEEC,QAAAA,KAAK,EAAE,IAFT;AAGEC,QAAAA,IAAI,EAAE;AAHR,OADO,EAMP;AACEF,QAAAA,KAAK,EAAE,cADT;AAEEC,QAAAA,KAAK,EAAE,YAFT;AAGEC,QAAAA,IAAI,EAAE;AAHR,OANO,EAWN;AACCF,QAAAA,KAAK,EAAE,QADR;AAECC,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,IAAI,EAAE;AAHP,OAXM,EAgBN;AACCF,QAAAA,KAAK,EAAE,QADR;AAECC,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,IAAI,EAAE;AAHP,OAhBM,EAqBN;AACCF,QAAAA,KAAK,EAAE,SADR;AAECC,QAAAA,KAAK,EAAE,SAFR;AAGCC,QAAAA,IAAI,EAAE;AAHP,OArBM,CADE;AA4BXC,MAAAA,IAAI,EAAE;AA5BK,KAAb;AA+BAR,IAAAA,MAAM,CAACS,OAAP,CAAeC,KAAK,IAAI;AACtBP,MAAAA,IAAI,CAACK,IAAL,CAAUG,IAAV,CAAe;AACbC,QAAAA,EAAE,EAAEF,KAAK,CAACG,GADG;AAEbC,QAAAA,UAAU,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,MAFhB;AAGbC,QAAAA,MAAM,EAAG,GAAEP,KAAK,CAACQ,UAAW,EAHf;AAIbC,QAAAA,MAAM,EAAET,KAAK,CAACU,WAAN,IAAqBC,MAAM,CAACX,KAAK,CAACU,WAAP,CAAN,CAC5BE,QAD4B,CACnB,WADmB,CAArB,gBAEN;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAV;AAAA,oBAA+Bb,KAAK,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFM,gBAGN;AAAG,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAAV;AAAA,oBAA6Bb,KAAK,CAACU;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAPW;AAQbI,QAAAA,OAAO,eACL,QAAC,IAAD;AACA,UAAA,EAAE,EAAG,UAASd,KAAK,CAACG,GAAI,EADxB;AAEA,UAAA,SAAS,EAAC,kDAFV;AAAA,kCAGE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AATW,OAAf;AAeD,KAhBD;AAkBA,WAAOV,IAAP;AACD,GAnDD;;AAqDA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGL,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN,QAAC,YAAD;AACE,MAAA,IAAI,EAAEI,SAAS,EADjB;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,OAAO,MAJT;AAKE,MAAA,eAAe,MALjB;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,KAAK;AAPP;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADF;AAmBD,CAxFD;;GAAMP,U;UAEUN,Q,EACGC,W,EAEkBC,W;;;KAL/BI,U;AA0FN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nimport { ImEye } from \"react-icons/im\";\n\nconst ListOrders = () => {\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { loading, error, orders } = useSelector( state => state.myOrders );\n\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders= () => {\n    const data = {\n      columns: [\n        {\n          label: 'Order ID',\n          field: 'id',\n          sort: 'asc'\n        },\n        {\n          label: 'Num of Items',\n          field: 'numOfItems',\n          sort: 'asc'\n        },\n         {\n          label: 'Amount',\n          field: 'amount',\n          sort: 'asc'\n        },\n         {\n          label: 'Status',\n          field: 'status',\n          sort: 'asc'\n        },\n         {\n          label: 'Actions',\n          field: 'actions',\n          sort: 'asc'\n        },\n      ],\n      rows: []\n    }\n\n    orders.forEach(order => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `${order.totalPrice}`,\n        status: order.orderStatus && String(order.orderStatus)\n        .includes('Delivered') \n        ? <p style={{ color: 'green' }}>{order.orderStatus}</p> \n        : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n        actions:\n          <Link \n          to={`/order/${order._id}`} \n          className=\"btn btn-primary d-inline-flex align-items-center\" >\n            <ImEye className=\"mr-1\" /> View Details\n          </Link>\n      })\n    })\n\n    return data;\n  }\n\n  return (\n    <>\n      <MetaData title={'My Orders'} />\n\n      <h1 className=\"my-5\">My Orders</h1>\n\n      {loading ? <Loader /> : (\n        <MDBDataTable \n          data={setOrders()}\n          className=\"px-3\"\n          bordered\n          striped\n          noBottomColumns\n          sortable\n          hover\n        />\n      )}\n    </>\n  )\n}\n\nexport default ListOrders\n"]},"metadata":{},"sourceType":"module"}