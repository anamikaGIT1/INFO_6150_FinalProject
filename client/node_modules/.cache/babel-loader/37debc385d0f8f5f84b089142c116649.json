{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satish\\\\Desktop\\\\web_design\\\\E-Shop\\\\Final Project\\\\INFO6150-20821-Web-Design-User-Experience_final_project\\\\final_project\\\\client\\\\src\\\\components\\\\user\\\\UpdatePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MetaData from '../layout/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatePassword, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdatePassword = ({\n  history\n}) => {\n  _s();\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [password, setPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('Password updated successfully');\n      history.push('/me');\n      dispatch({\n        type: UPDATE_PASSWORD_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('oldPassword', oldPassword);\n    formData.set('password', password);\n    dispatch(updatePassword(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Update Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"Update Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password_field\",\n              children: \"Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password_field\",\n              className: \"form-control\",\n              value: oldPassword,\n              onChange: e => setOldPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_password_field\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_password_field\",\n              className: \"form-control\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            disabled: loading ? true : false,\n            children: \"Update Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdatePassword, \"sL9A2CnBaBmqvDe8aqSNXmcHWI8=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = UpdatePassword;\nexport default UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/components/user/UpdatePassword.js"],"names":["React","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","updatePassword","clearErrors","UPDATE_PASSWORD_RESET","UpdatePassword","history","oldPassword","setOldPassword","password","setPassword","alert","dispatch","error","isUpdated","loading","state","user","success","push","type","submitHandler","e","preventDefault","formData","FormData","set","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport  MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\n\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n  const [oldPassword, setOldPassword] = useState('')\n  const [password, setPassword] = useState('')\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, isUpdated, loading } = useSelector(\n    state => state.user)\n\n  useEffect(() => {\n\n    if(error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if(isUpdated) {\n      alert.success('Password updated successfully');\n\n      history.push('/me');\n\n      dispatch({\n        type: UPDATE_PASSWORD_RESET\n      })\n    }\n\n  }, [dispatch, alert, error, history, isUpdated])\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('oldPassword', oldPassword );\n    formData.set('password', password );\n\n    dispatch(updatePassword(formData));\n  }\n\n  return (\n    <>\n      <MetaData title={'Update Password'} />\n\n      <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3\">Update Password</h1>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Old Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password_field\"\n                            className=\"form-control\"\n                            value={oldPassword}\n                            onChange={(e) => \n                              setOldPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirm_password_field\">New Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_password_field\"\n                            className=\"form-control\"\n                            value={password}\n                            onChange={(e) => \n                              setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-block py-3\"\n                        disabled={ loading ? true : false }\n                        >\n                        Update Password\n                    </button>\n\n                </form>\n            </div>\n        </div>\n    </>\n  )\n}\n\nexport default UpdatePassword\n"]},"metadata":{},"sourceType":"module"}