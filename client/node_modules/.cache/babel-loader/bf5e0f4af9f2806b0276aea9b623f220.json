{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satish\\\\Desktop\\\\web_design\\\\E-Shop\\\\Final Project\\\\INFO6150-20821-Web-Design-User-Experience_final_project\\\\final_project\\\\client\\\\src\\\\components\\\\route\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  isAdmin,\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuth,\n    loading,\n    user\n  } = useSelector(state => state.auth);\n  return loading === false && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth === false) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }, this);\n      }\n\n      if (isAdmin === true && user.role !== 'admin') {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 34\n  }, this);\n};\n\n_s(ProtectedRoute, \"0D++yMLSmOpjvSMxVuSzMjeheYM=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/components/route/ProtectedRoute.js"],"names":["Route","Redirect","useSelector","ProtectedRoute","isAdmin","component","Component","rest","isAuth","loading","user","state","auth","props","role"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,SAAS,EAAEC,SAArB;AAAgC,KAAGC;AAAnC,CAAD,KAA+C;AAAA;;AAEpE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA2BR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5C;AAEA,SAAQH,OAAO,KAAK,KAAZ,iBAAuB,QAAC,KAAD,OAAWF,IAAX;AAC7B,IAAA,MAAM,EAAEM,KAAK,IAAI;AACf,UAAIL,MAAM,KAAK,KAAf,EAAsB;AACpB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,UAAIJ,OAAO,KAAK,IAAZ,IAAoBM,IAAI,CAACI,IAAL,KAAc,OAAtC,EAA+C;AAC7C,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,0BAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AAED;AAZ4B;AAAA;AAAA;AAAA;AAAA,UAA/B;AAcD,CAlBD;;GAAMV,c;UAE6BD,W;;;KAF7BC,c;AAoBN,eAAeA,cAAf","sourcesContent":["import { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst ProtectedRoute = ({isAdmin, component: Component, ...rest }) => {\n  \n  const { isAuth, loading, user} = useSelector(state => state.auth)\n  \n  return (loading === false && ( <Route {...rest} \n    render={props => {\n      if (isAuth === false) {\n        return <Redirect to='login' />;\n      }\n\n      if (isAdmin === true && user.role !== 'admin') {\n        return <Redirect to=\"/\" />\n      }\n\n      return <Component {...props} />;\n    \n    }}\n  />))\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}