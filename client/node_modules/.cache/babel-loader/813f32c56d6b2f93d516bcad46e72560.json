{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from '../constants/productConstants'; // Get All Products\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Get Product Details\n\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; //* Admin routes\n// Get All Products (ADMIN)\n\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/admin/products');\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (err) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Add new product (ADMIN)\n\nexport const newProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Update product (ADMIN)\n\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Delete product (ADMIN)\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; //* Reviews\n// New review\n\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Products all reviews\n\nexport const getProductReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/reviews?id=${id}`);\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Delete review\n\nexport const deleteReview = (id, productId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Satish/Desktop/web_design/E-Shop/Final Project/INFO6150-20821-Web-Design-User-Experience_final_project/final_project/client/src/actions/productActions.js"],"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","CLEAR_ERRORS","getProducts","keyword","currentPage","price","category","rating","dispatch","type","link","data","get","payload","err","response","errorMessage","getProductDetails","id","product","getAdminProducts","products","newProduct","productData","config","headers","post","updateProduct","put","success","deleteProduct","delete","newReview","reviewData","getProductReviews","reviews","deleteReview","productId","clearErrors"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { \n  ALL_PRODUCTS_REQUEST,\n  ALL_PRODUCTS_SUCCESS,\n  ALL_PRODUCTS_FAIL,\n  ADMIN_PRODUCTS_REQUEST,\n  ADMIN_PRODUCTS_SUCCESS,\n  ADMIN_PRODUCTS_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_FAIL,\n  GET_REVIEWS_REQUEST,\n  GET_REVIEWS_SUCCESS,\n  GET_REVIEWS_FAIL,\n  DELETE_REVIEW_REQUEST,\n  DELETE_REVIEW_SUCCESS,\n  DELETE_REVIEW_FAIL,\n  CLEAR_ERRORS\n} from '../constants/productConstants'\n\n\n// Get All Products\nexport const getProducts = (\n  keyword= '',\n  currentPage= 1, \n  price,\n  category,\n  rating= 0\n) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: ALL_PRODUCTS_REQUEST});\n    \n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n    }\n\n    const { data } = await axios.get(link);\n\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n\n  } catch(err) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Get Product Details\nexport const getProductDetails = (id) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n\n  } catch(err) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n//* Admin routes\n\n// Get All Products (ADMIN)\nexport const getAdminProducts = () => async dispatch => {\n\n  try {\n   \n    dispatch({ type: ADMIN_PRODUCTS_REQUEST });\n\n    const { data } = await axios.get('/api/v1/admin/products');\n\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n\n  } catch(err) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Add new product (ADMIN)\nexport const newProduct = (productData) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: NEW_PRODUCT_REQUEST });\n\n     const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n\n  } catch(err) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Update product (ADMIN)\nexport const updateProduct = (id, productData) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n     const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Delete product (ADMIN)\nexport const deleteProduct = (id) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n//* Reviews\n\n// New review\nexport const newReview = (reviewData) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: NEW_REVIEW_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Products all reviews\nexport const getProductReviews = (id) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: GET_REVIEWS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n\n  } catch(err) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n// Delete review\nexport const deleteReview = (id, productId) => async dispatch => {\n\n  try {\n   \n    dispatch({ type: DELETE_REVIEW_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\n\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n\n  } catch(err) {\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: err.response.data.errorMessage\n    });\n  }\n}\n\n\n// Clear Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n}"]},"metadata":{},"sourceType":"module"}